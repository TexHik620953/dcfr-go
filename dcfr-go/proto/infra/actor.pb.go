// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/infra/actor.proto

package infra

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Стадии игры
type GameStage int32

const (
	GameStage_PREFLOP  GameStage = 0
	GameStage_FLOP     GameStage = 1
	GameStage_TURN     GameStage = 2
	GameStage_RIVER    GameStage = 3
	GameStage_SHOWDOWN GameStage = 4
)

// Enum value maps for GameStage.
var (
	GameStage_name = map[int32]string{
		0: "PREFLOP",
		1: "FLOP",
		2: "TURN",
		3: "RIVER",
		4: "SHOWDOWN",
	}
	GameStage_value = map[string]int32{
		"PREFLOP":  0,
		"FLOP":     1,
		"TURN":     2,
		"RIVER":    3,
		"SHOWDOWN": 4,
	}
)

func (x GameStage) Enum() *GameStage {
	p := new(GameStage)
	*p = x
	return p
}

func (x GameStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStage) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_infra_actor_proto_enumTypes[0].Descriptor()
}

func (GameStage) Type() protoreflect.EnumType {
	return &file_proto_infra_actor_proto_enumTypes[0]
}

func (x GameStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStage.Descriptor instead.
func (GameStage) EnumDescriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{0}
}

// Дополнительные типы действий (можно расширять)
type ActionType int32

const (
	ActionType_FOLD   ActionType = 0
	ActionType_CHECK  ActionType = 1
	ActionType_CALL   ActionType = 2
	ActionType_RAISE  ActionType = 3
	ActionType_ALL_IN ActionType = 4
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "FOLD",
		1: "CHECK",
		2: "CALL",
		3: "RAISE",
		4: "ALL_IN",
	}
	ActionType_value = map[string]int32{
		"FOLD":   0,
		"CHECK":  1,
		"CALL":   2,
		"RAISE":  3,
		"ALL_IN": 4,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_infra_actor_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_proto_infra_actor_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{1}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_infra_actor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{0}
}

// Определение карты
// Состояние игры
type GameState struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ActivePlayersMask []int32                `protobuf:"varint,1,rep,packed,name=active_players_mask,json=activePlayersMask,proto3" json:"active_players_mask,omitempty"`                                                    // Маска активных игроков
	PlayersPots       []int32                `protobuf:"varint,2,rep,packed,name=players_pots,json=playersPots,proto3" json:"players_pots,omitempty"`                                                                        // Банки игроков
	Stakes            []int32                `protobuf:"varint,3,rep,packed,name=stakes,proto3" json:"stakes,omitempty"`                                                                                                     // Текущие ставки игроков
	LegalActions      map[int32]bool         `protobuf:"bytes,4,rep,name=legal_actions,json=legalActions,proto3" json:"legal_actions,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Доступные действия (ключ - действие, значение - всегда true)
	Stage             GameStage              `protobuf:"varint,5,opt,name=stage,proto3,enum=infra.GameStage" json:"stage,omitempty"`                                                                                         // Текущая стадия игры
	CurrentPlayer     int32                  `protobuf:"varint,6,opt,name=current_player,json=currentPlayer,proto3" json:"current_player,omitempty"`                                                                         // ID текущего игрока
	PublicCards       []int32                `protobuf:"varint,7,rep,packed,name=public_cards,json=publicCards,proto3" json:"public_cards,omitempty"`                                                                        // Общие карты на столе
	PrivateCards      []int32                `protobuf:"varint,8,rep,packed,name=private_cards,json=privateCards,proto3" json:"private_cards,omitempty"`                                                                     // Карты текущего игрока
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GameState) Reset() {
	*x = GameState{}
	mi := &file_proto_infra_actor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{1}
}

func (x *GameState) GetActivePlayersMask() []int32 {
	if x != nil {
		return x.ActivePlayersMask
	}
	return nil
}

func (x *GameState) GetPlayersPots() []int32 {
	if x != nil {
		return x.PlayersPots
	}
	return nil
}

func (x *GameState) GetStakes() []int32 {
	if x != nil {
		return x.Stakes
	}
	return nil
}

func (x *GameState) GetLegalActions() map[int32]bool {
	if x != nil {
		return x.LegalActions
	}
	return nil
}

func (x *GameState) GetStage() GameStage {
	if x != nil {
		return x.Stage
	}
	return GameStage_PREFLOP
}

func (x *GameState) GetCurrentPlayer() int32 {
	if x != nil {
		return x.CurrentPlayer
	}
	return 0
}

func (x *GameState) GetPublicCards() []int32 {
	if x != nil {
		return x.PublicCards
	}
	return nil
}

func (x *GameState) GetPrivateCards() []int32 {
	if x != nil {
		return x.PrivateCards
	}
	return nil
}

// Тренировочный сэмпл
type Sample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *GameState             `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"` // Состояние игры
	Strategy      map[int32]float32      `protobuf:"bytes,2,rep,name=strategy,proto3" json:"strategy,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	Regrets       map[int32]float32      `protobuf:"bytes,3,rep,name=regrets,proto3" json:"regrets,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // Сожаления для действий (Action -> float32)
	ReachProb     float32                `protobuf:"fixed32,4,opt,name=reach_prob,json=reachProb,proto3" json:"reach_prob,omitempty"`                                                       // Вес примера (reach probability)
	Iteration     int32                  `protobuf:"varint,5,opt,name=iteration,proto3" json:"iteration,omitempty"`                                                                         // Номер итерации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sample) Reset() {
	*x = Sample{}
	mi := &file_proto_infra_actor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{2}
}

func (x *Sample) GetState() *GameState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Sample) GetStrategy() map[int32]float32 {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *Sample) GetRegrets() map[int32]float32 {
	if x != nil {
		return x.Regrets
	}
	return nil
}

func (x *Sample) GetReachProb() float32 {
	if x != nil {
		return x.ReachProb
	}
	return 0
}

func (x *Sample) GetIteration() int32 {
	if x != nil {
		return x.Iteration
	}
	return 0
}

// Запрос состояния игры
type GameStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         []*GameState           `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStateRequest) Reset() {
	*x = GameStateRequest{}
	mi := &file_proto_infra_actor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateRequest) ProtoMessage() {}

func (x *GameStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateRequest.ProtoReflect.Descriptor instead.
func (*GameStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{3}
}

func (x *GameStateRequest) GetState() []*GameState {
	if x != nil {
		return x.State
	}
	return nil
}

// Ответ с вероятностями действий
type ActionProbsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Responses     []*ProbsResponse       `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionProbsResponse) Reset() {
	*x = ActionProbsResponse{}
	mi := &file_proto_infra_actor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionProbsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionProbsResponse) ProtoMessage() {}

func (x *ActionProbsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionProbsResponse.ProtoReflect.Descriptor instead.
func (*ActionProbsResponse) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{4}
}

func (x *ActionProbsResponse) GetResponses() []*ProbsResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ProbsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionProbs   map[int32]float32      `protobuf:"bytes,1,rep,name=action_probs,json=actionProbs,proto3" json:"action_probs,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // Карта вероятностей действий
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbsResponse) Reset() {
	*x = ProbsResponse{}
	mi := &file_proto_infra_actor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbsResponse) ProtoMessage() {}

func (x *ProbsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbsResponse.ProtoReflect.Descriptor instead.
func (*ProbsResponse) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{5}
}

func (x *ProbsResponse) GetActionProbs() map[int32]float32 {
	if x != nil {
		return x.ActionProbs
	}
	return nil
}

// Запрос на тренировку
type TrainRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentPlayer int32                  `protobuf:"varint,1,opt,name=current_player,json=currentPlayer,proto3" json:"current_player,omitempty"`
	Samples       []*Sample              `protobuf:"bytes,2,rep,name=samples,proto3" json:"samples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrainRequest) Reset() {
	*x = TrainRequest{}
	mi := &file_proto_infra_actor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainRequest) ProtoMessage() {}

func (x *TrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainRequest.ProtoReflect.Descriptor instead.
func (*TrainRequest) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{6}
}

func (x *TrainRequest) GetCurrentPlayer() int32 {
	if x != nil {
		return x.CurrentPlayer
	}
	return 0
}

func (x *TrainRequest) GetSamples() []*Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

type TrainAvgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Samples       []*Sample              `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrainAvgRequest) Reset() {
	*x = TrainAvgRequest{}
	mi := &file_proto_infra_actor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainAvgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainAvgRequest) ProtoMessage() {}

func (x *TrainAvgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainAvgRequest.ProtoReflect.Descriptor instead.
func (*TrainAvgRequest) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{7}
}

func (x *TrainAvgRequest) GetSamples() []*Sample {
	if x != nil {
		return x.Samples
	}
	return nil
}

type TrainResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Loss          float32                `protobuf:"fixed32,1,opt,name=loss,proto3" json:"loss,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrainResponse) Reset() {
	*x = TrainResponse{}
	mi := &file_proto_infra_actor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainResponse) ProtoMessage() {}

func (x *TrainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_infra_actor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainResponse.ProtoReflect.Descriptor instead.
func (*TrainResponse) Descriptor() ([]byte, []int) {
	return file_proto_infra_actor_proto_rawDescGZIP(), []int{8}
}

func (x *TrainResponse) GetLoss() float32 {
	if x != nil {
		return x.Loss
	}
	return 0
}

var File_proto_infra_actor_proto protoreflect.FileDescriptor

const file_proto_infra_actor_proto_rawDesc = "" +
	"\n" +
	"\x17proto/infra/actor.proto\x12\x05infra\"\a\n" +
	"\x05Empty\"\x97\x03\n" +
	"\tGameState\x12.\n" +
	"\x13active_players_mask\x18\x01 \x03(\x05R\x11activePlayersMask\x12!\n" +
	"\fplayers_pots\x18\x02 \x03(\x05R\vplayersPots\x12\x16\n" +
	"\x06stakes\x18\x03 \x03(\x05R\x06stakes\x12G\n" +
	"\rlegal_actions\x18\x04 \x03(\v2\".infra.GameState.LegalActionsEntryR\flegalActions\x12&\n" +
	"\x05stage\x18\x05 \x01(\x0e2\x10.infra.GameStageR\x05stage\x12%\n" +
	"\x0ecurrent_player\x18\x06 \x01(\x05R\rcurrentPlayer\x12!\n" +
	"\fpublic_cards\x18\a \x03(\x05R\vpublicCards\x12#\n" +
	"\rprivate_cards\x18\b \x03(\x05R\fprivateCards\x1a?\n" +
	"\x11LegalActionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\xd5\x02\n" +
	"\x06Sample\x12&\n" +
	"\x05state\x18\x01 \x01(\v2\x10.infra.GameStateR\x05state\x127\n" +
	"\bstrategy\x18\x02 \x03(\v2\x1b.infra.Sample.StrategyEntryR\bstrategy\x124\n" +
	"\aregrets\x18\x03 \x03(\v2\x1a.infra.Sample.RegretsEntryR\aregrets\x12\x1d\n" +
	"\n" +
	"reach_prob\x18\x04 \x01(\x02R\treachProb\x12\x1c\n" +
	"\titeration\x18\x05 \x01(\x05R\titeration\x1a;\n" +
	"\rStrategyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a:\n" +
	"\fRegretsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\":\n" +
	"\x10GameStateRequest\x12&\n" +
	"\x05state\x18\x01 \x03(\v2\x10.infra.GameStateR\x05state\"I\n" +
	"\x13ActionProbsResponse\x122\n" +
	"\tresponses\x18\x01 \x03(\v2\x14.infra.ProbsResponseR\tresponses\"\x99\x01\n" +
	"\rProbsResponse\x12H\n" +
	"\faction_probs\x18\x01 \x03(\v2%.infra.ProbsResponse.ActionProbsEntryR\vactionProbs\x1a>\n" +
	"\x10ActionProbsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"^\n" +
	"\fTrainRequest\x12%\n" +
	"\x0ecurrent_player\x18\x01 \x01(\x05R\rcurrentPlayer\x12'\n" +
	"\asamples\x18\x02 \x03(\v2\r.infra.SampleR\asamples\":\n" +
	"\x0fTrainAvgRequest\x12'\n" +
	"\asamples\x18\x01 \x03(\v2\r.infra.SampleR\asamples\"#\n" +
	"\rTrainResponse\x12\x12\n" +
	"\x04loss\x18\x01 \x01(\x02R\x04loss*E\n" +
	"\tGameStage\x12\v\n" +
	"\aPREFLOP\x10\x00\x12\b\n" +
	"\x04FLOP\x10\x01\x12\b\n" +
	"\x04TURN\x10\x02\x12\t\n" +
	"\x05RIVER\x10\x03\x12\f\n" +
	"\bSHOWDOWN\x10\x04*B\n" +
	"\n" +
	"ActionType\x12\b\n" +
	"\x04FOLD\x10\x00\x12\t\n" +
	"\x05CHECK\x10\x01\x12\b\n" +
	"\x04CALL\x10\x02\x12\t\n" +
	"\x05RAISE\x10\x03\x12\n" +
	"\n" +
	"\x06ALL_IN\x10\x042\xa8\x02\n" +
	"\x05Actor\x12A\n" +
	"\bGetProbs\x12\x17.infra.GameStateRequest\x1a\x1a.infra.ActionProbsResponse\"\x00\x12D\n" +
	"\vGetAvgProbs\x12\x17.infra.GameStateRequest\x1a\x1a.infra.ActionProbsResponse\"\x00\x124\n" +
	"\x05Train\x12\x13.infra.TrainRequest\x1a\x14.infra.TrainResponse\"\x00\x12:\n" +
	"\bTrainAvg\x12\x16.infra.TrainAvgRequest\x1a\x14.infra.TrainResponse\"\x00\x12$\n" +
	"\x04Save\x12\f.infra.Empty\x1a\f.infra.Empty\"\x00B\tZ\a.;infrab\x06proto3"

var (
	file_proto_infra_actor_proto_rawDescOnce sync.Once
	file_proto_infra_actor_proto_rawDescData []byte
)

func file_proto_infra_actor_proto_rawDescGZIP() []byte {
	file_proto_infra_actor_proto_rawDescOnce.Do(func() {
		file_proto_infra_actor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_infra_actor_proto_rawDesc), len(file_proto_infra_actor_proto_rawDesc)))
	})
	return file_proto_infra_actor_proto_rawDescData
}

var file_proto_infra_actor_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_infra_actor_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_infra_actor_proto_goTypes = []any{
	(GameStage)(0),              // 0: infra.GameStage
	(ActionType)(0),             // 1: infra.ActionType
	(*Empty)(nil),               // 2: infra.Empty
	(*GameState)(nil),           // 3: infra.GameState
	(*Sample)(nil),              // 4: infra.Sample
	(*GameStateRequest)(nil),    // 5: infra.GameStateRequest
	(*ActionProbsResponse)(nil), // 6: infra.ActionProbsResponse
	(*ProbsResponse)(nil),       // 7: infra.ProbsResponse
	(*TrainRequest)(nil),        // 8: infra.TrainRequest
	(*TrainAvgRequest)(nil),     // 9: infra.TrainAvgRequest
	(*TrainResponse)(nil),       // 10: infra.TrainResponse
	nil,                         // 11: infra.GameState.LegalActionsEntry
	nil,                         // 12: infra.Sample.StrategyEntry
	nil,                         // 13: infra.Sample.RegretsEntry
	nil,                         // 14: infra.ProbsResponse.ActionProbsEntry
}
var file_proto_infra_actor_proto_depIdxs = []int32{
	11, // 0: infra.GameState.legal_actions:type_name -> infra.GameState.LegalActionsEntry
	0,  // 1: infra.GameState.stage:type_name -> infra.GameStage
	3,  // 2: infra.Sample.state:type_name -> infra.GameState
	12, // 3: infra.Sample.strategy:type_name -> infra.Sample.StrategyEntry
	13, // 4: infra.Sample.regrets:type_name -> infra.Sample.RegretsEntry
	3,  // 5: infra.GameStateRequest.state:type_name -> infra.GameState
	7,  // 6: infra.ActionProbsResponse.responses:type_name -> infra.ProbsResponse
	14, // 7: infra.ProbsResponse.action_probs:type_name -> infra.ProbsResponse.ActionProbsEntry
	4,  // 8: infra.TrainRequest.samples:type_name -> infra.Sample
	4,  // 9: infra.TrainAvgRequest.samples:type_name -> infra.Sample
	5,  // 10: infra.Actor.GetProbs:input_type -> infra.GameStateRequest
	5,  // 11: infra.Actor.GetAvgProbs:input_type -> infra.GameStateRequest
	8,  // 12: infra.Actor.Train:input_type -> infra.TrainRequest
	9,  // 13: infra.Actor.TrainAvg:input_type -> infra.TrainAvgRequest
	2,  // 14: infra.Actor.Save:input_type -> infra.Empty
	6,  // 15: infra.Actor.GetProbs:output_type -> infra.ActionProbsResponse
	6,  // 16: infra.Actor.GetAvgProbs:output_type -> infra.ActionProbsResponse
	10, // 17: infra.Actor.Train:output_type -> infra.TrainResponse
	10, // 18: infra.Actor.TrainAvg:output_type -> infra.TrainResponse
	2,  // 19: infra.Actor.Save:output_type -> infra.Empty
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_infra_actor_proto_init() }
func file_proto_infra_actor_proto_init() {
	if File_proto_infra_actor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_infra_actor_proto_rawDesc), len(file_proto_infra_actor_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_infra_actor_proto_goTypes,
		DependencyIndexes: file_proto_infra_actor_proto_depIdxs,
		EnumInfos:         file_proto_infra_actor_proto_enumTypes,
		MessageInfos:      file_proto_infra_actor_proto_msgTypes,
	}.Build()
	File_proto_infra_actor_proto = out.File
	file_proto_infra_actor_proto_goTypes = nil
	file_proto_infra_actor_proto_depIdxs = nil
}
